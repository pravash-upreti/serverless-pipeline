env:
  global:
    # include $HOME/.local/bin for `aws`
    - PATH=$HOME/.local/bin:$PATH

before_install:
  # set up awscli packages
  - pip install --user awscli
  - mkdir -p ~/$TRAVIS_BUILD_NUMBER
  - aws s3 sync s3://travis-build-stages-shared-storage-test/$TRAVIS_BUILD_NUMBER ~/$TRAVIS_BUILD_NUMBER
  
before_script:
  - npm install -g serverless
  - npm install -g serverless-single-page-app-plugin  

cache:
  directories:
    - ~/api/node_modules
    - ~/app/node_modules
    
jobs:
  include:
    - stage: build_api
      language: node_js
      node_js: "8.10"
      cache:
        directories:
          - "node_modules"
        yarn: true
      install:
      - mkdir ~/mycache
      - echo "$TRAVIS_BUILD_ID"
      - echo "$TRAVIS_BUILD_ID" > ~/mycache/travis_build_id
      - echo "build stuff" > ~/mycache/artifact.bin
      script: |
                echo one | tee > ~/$TRAVIS_BUILD_NUMBER/one
                cd api
                npm install
                cd ../app
                npm install
      
      branches:
        only:
        - ci-config
        - dev
        - master      
        
      script: echo "second job"
      
    - stage: deploy_app
      language: node_js
      node_js: "8.10"
      before_install:
        - | 
            sudo apt-get update
            
      install:
      - if test "$TRAVIS_BUILD_ID" != `cat ~/mycache/travis_build_id`; then travis_terminate 1; fi
      - rm -f ~/mycache/travis_build_id
      - echo "Do something with ~/mycache/artifact.bin, e.g. publish it to gh-pages"
      - mv ~/mycache ~/mycache-discard
      - mkdir ~/mycache # clear the cache
      branches:
        only:
        - dev
        - ci-config
        - master
        
      script: 
        - |
            cat ~/$TRAVIS_BUILD_NUMBER/*
            echo "Deploying the app to server"
            cd devops/frontend
            npm install
            serverless deploy
            serverless syncToS3
            
            cd ../backend
            npm install serverless-package-external 
            npm install serverless-http --save
            serverless deploy
            
      after_success:
              - aws s3 rm --recursive s3://lf-travis-shared-storage/$TRAVIS_BUILD_NUMBER # clean up after ourselves
        
after_success:
  - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://lf-travis-shared-storage/$TRAVIS_BUILD_NUMBER
  
        
            
